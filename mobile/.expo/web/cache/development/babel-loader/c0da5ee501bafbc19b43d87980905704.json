{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { PermissionStatus, createPermissionHook, UnavailabilityError, CodedError } from 'expo-modules-core';\nimport ExponentImagePicker from \"./ExponentImagePicker\";\nimport { MediaTypeOptions, VideoExportPreset, UIImagePickerControllerQualityType, UIImagePickerPresentationStyle } from \"./ImagePicker.types\";\nfunction validateOptions(options) {\n  var aspect = options.aspect,\n    quality = options.quality,\n    videoMaxDuration = options.videoMaxDuration;\n  if (aspect != null) {\n    var _aspect = _slicedToArray(aspect, 2),\n      x = _aspect[0],\n      y = _aspect[1];\n    if (x <= 0 || y <= 0) {\n      throw new CodedError('ERR_INVALID_ARGUMENT', \"Invalid aspect ratio values \" + x + \":\" + y + \". Provide positive numbers.\");\n    }\n  }\n  if (quality && (quality < 0 || quality > 1)) {\n    throw new CodedError('ERR_INVALID_ARGUMENT', \"Invalid 'quality' value \" + quality + \". Provide a value between 0 and 1.\");\n  }\n  if (videoMaxDuration && videoMaxDuration < 0) {\n    throw new CodedError('ERR_INVALID_ARGUMENT', \"Invalid 'videoMaxDuration' value \" + videoMaxDuration + \". Provide a non-negative number.\");\n  }\n  return options;\n}\nvar DEPRECATED_RESULT_KEYS = ['uri', 'assetId', 'width', 'height', 'type', 'exif', 'base64', 'duration', 'fileName', 'fileSize'];\nfunction mergeDeprecatedResult(result) {\n  var _result$assets;\n  var firstAsset = (_result$assets = result.assets) == null ? void 0 : _result$assets[0];\n  var deprecatedResult = _objectSpread(_objectSpread({}, result), {}, {\n    get cancelled() {\n      console.warn('Key \"cancelled\" in the image picker result is deprecated and will be removed in SDK 48, use \"canceled\" instead');\n      return this.canceled;\n    }\n  });\n  var _loop = function _loop(key) {\n    Object.defineProperty(deprecatedResult, key, {\n      get: function get() {\n        console.warn(\"Key \\\"\" + key + \"\\\" in the image picker result is deprecated and will be removed in SDK 48, you can access selected assets through the \\\"assets\\\" array instead\");\n        return firstAsset == null ? void 0 : firstAsset[key];\n      }\n    });\n  };\n  for (var key of DEPRECATED_RESULT_KEYS) {\n    _loop(key);\n  }\n  return deprecatedResult;\n}\nexport function getCameraPermissionsAsync() {\n  return _getCameraPermissionsAsync.apply(this, arguments);\n}\nfunction _getCameraPermissionsAsync() {\n  _getCameraPermissionsAsync = _asyncToGenerator(function* () {\n    return ExponentImagePicker.getCameraPermissionsAsync();\n  });\n  return _getCameraPermissionsAsync.apply(this, arguments);\n}\nexport function getMediaLibraryPermissionsAsync() {\n  return _getMediaLibraryPermissionsAsync.apply(this, arguments);\n}\nfunction _getMediaLibraryPermissionsAsync() {\n  _getMediaLibraryPermissionsAsync = _asyncToGenerator(function* () {\n    var writeOnly = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    return ExponentImagePicker.getMediaLibraryPermissionsAsync(writeOnly);\n  });\n  return _getMediaLibraryPermissionsAsync.apply(this, arguments);\n}\nexport function requestCameraPermissionsAsync() {\n  return _requestCameraPermissionsAsync.apply(this, arguments);\n}\nfunction _requestCameraPermissionsAsync() {\n  _requestCameraPermissionsAsync = _asyncToGenerator(function* () {\n    return ExponentImagePicker.requestCameraPermissionsAsync();\n  });\n  return _requestCameraPermissionsAsync.apply(this, arguments);\n}\nexport function requestMediaLibraryPermissionsAsync() {\n  return _requestMediaLibraryPermissionsAsync.apply(this, arguments);\n}\nfunction _requestMediaLibraryPermissionsAsync() {\n  _requestMediaLibraryPermissionsAsync = _asyncToGenerator(function* () {\n    var writeOnly = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    var imagePickerMethod = ExponentImagePicker.requestMediaLibraryPermissionsAsync;\n    return imagePickerMethod(writeOnly);\n  });\n  return _requestMediaLibraryPermissionsAsync.apply(this, arguments);\n}\nexport var useMediaLibraryPermissions = createPermissionHook({\n  getMethod: function getMethod(options) {\n    return getMediaLibraryPermissionsAsync(options == null ? void 0 : options.writeOnly);\n  },\n  requestMethod: function requestMethod(options) {\n    return requestMediaLibraryPermissionsAsync(options == null ? void 0 : options.writeOnly);\n  }\n});\nexport var useCameraPermissions = createPermissionHook({\n  getMethod: getCameraPermissionsAsync,\n  requestMethod: requestCameraPermissionsAsync\n});\nexport function getPendingResultAsync() {\n  return _getPendingResultAsync.apply(this, arguments);\n}\nfunction _getPendingResultAsync() {\n  _getPendingResultAsync = _asyncToGenerator(function* () {\n    if (ExponentImagePicker.getPendingResultAsync) {\n      return ExponentImagePicker.getPendingResultAsync();\n    }\n    return [];\n  });\n  return _getPendingResultAsync.apply(this, arguments);\n}\nexport function launchCameraAsync() {\n  return _launchCameraAsync.apply(this, arguments);\n}\nfunction _launchCameraAsync() {\n  _launchCameraAsync = _asyncToGenerator(function* () {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (!ExponentImagePicker.launchCameraAsync) {\n      throw new UnavailabilityError('ImagePicker', 'launchCameraAsync');\n    }\n    var result = yield ExponentImagePicker.launchCameraAsync(validateOptions(options));\n    return mergeDeprecatedResult(result);\n  });\n  return _launchCameraAsync.apply(this, arguments);\n}\nexport function launchImageLibraryAsync(_x) {\n  return _launchImageLibraryAsync.apply(this, arguments);\n}\nfunction _launchImageLibraryAsync() {\n  _launchImageLibraryAsync = _asyncToGenerator(function* (options) {\n    if (!ExponentImagePicker.launchImageLibraryAsync) {\n      throw new UnavailabilityError('ImagePicker', 'launchImageLibraryAsync');\n    }\n    if (options != null && options.allowsEditing && options.allowsMultipleSelection) {\n      console.warn('[expo-image-picker] `allowsEditing` is not supported when `allowsMultipleSelection` is enabled and will be ignored.' + \"Disable either 'allowsEditing' or 'allowsMultipleSelection' in 'launchImageLibraryAsync' \" + 'to fix this warning.');\n    }\n    var result = yield ExponentImagePicker.launchImageLibraryAsync(options != null ? options : {});\n    return mergeDeprecatedResult(result);\n  });\n  return _launchImageLibraryAsync.apply(this, arguments);\n}\nexport { MediaTypeOptions, VideoExportPreset, PermissionStatus, UIImagePickerControllerQualityType, UIImagePickerPresentationStyle };","map":{"version":3,"sources":["../src/ImagePicker.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  PermissionStatus,\n  PermissionExpiration,\n  PermissionHookOptions,\n  PermissionResponse,\n  createPermissionHook,\n  UnavailabilityError,\n  CodedError,\n} from 'expo-modules-core';\n\nimport ExponentImagePicker from './ExponentImagePicker';\nimport {\n  CameraPermissionResponse,\n  MediaLibraryPermissionResponse,\n  ImagePickerResult,\n  ImagePickerAsset,\n  ImagePickerErrorResult,\n  MediaTypeOptions,\n  ImagePickerOptions,\n  VideoExportPreset,\n  ExpandImagePickerResult,\n  ImageInfo,\n  ImagePickerMultipleResult,\n  ImagePickerCancelledResult,\n  OpenFileBrowserOptions,\n  UIImagePickerControllerQualityType,\n  UIImagePickerPresentationStyle,\n} from './ImagePicker.types';\n\nfunction validateOptions(options: ImagePickerOptions) {\n  const { aspect, quality, videoMaxDuration } = options;\n\n  if (aspect != null) {\n    const [x, y] = aspect;\n\n    if (x <= 0 || y <= 0) {\n      throw new CodedError(\n        'ERR_INVALID_ARGUMENT',\n        `Invalid aspect ratio values ${x}:${y}. Provide positive numbers.`\n      );\n    }\n  }\n\n  if (quality && (quality < 0 || quality > 1)) {\n    throw new CodedError(\n      'ERR_INVALID_ARGUMENT',\n      `Invalid 'quality' value ${quality}. Provide a value between 0 and 1.`\n    );\n  }\n\n  if (videoMaxDuration && videoMaxDuration < 0) {\n    throw new CodedError(\n      'ERR_INVALID_ARGUMENT',\n      `Invalid 'videoMaxDuration' value ${videoMaxDuration}. Provide a non-negative number.`\n    );\n  }\n\n  return options;\n}\n\nconst DEPRECATED_RESULT_KEYS = [\n  'uri',\n  'assetId',\n  'width',\n  'height',\n  'type',\n  'exif',\n  'base64',\n  'duration',\n  'fileName',\n  'fileSize',\n];\nfunction mergeDeprecatedResult(result: ImagePickerResult): ImagePickerResult {\n  const firstAsset = result.assets?.[0];\n  const deprecatedResult = {\n    ...result,\n    get cancelled() {\n      console.warn(\n        'Key \"cancelled\" in the image picker result is deprecated and will be removed in SDK 48, use \"canceled\" instead'\n      );\n      return this.canceled;\n    },\n  };\n  for (const key of DEPRECATED_RESULT_KEYS) {\n    Object.defineProperty(deprecatedResult, key, {\n      get() {\n        console.warn(\n          `Key \"${key}\" in the image picker result is deprecated and will be removed in SDK 48, you can access selected assets through the \"assets\" array instead`\n        );\n        return firstAsset?.[key];\n      },\n    });\n  }\n  return deprecatedResult;\n}\n\n// @needsAudit\n/**\n * Checks user's permissions for accessing camera.\n * @return A promise that fulfills with an object of type [CameraPermissionResponse](#camerapermissionresponse).\n */\nexport async function getCameraPermissionsAsync(): Promise<CameraPermissionResponse> {\n  return ExponentImagePicker.getCameraPermissionsAsync();\n}\n\n// @needsAudit\n/**\n * Checks user's permissions for accessing photos.\n * @param writeOnly Whether to request write or read and write permissions. Defaults to `false`\n * @return A promise that fulfills with an object of type [MediaLibraryPermissionResponse](#medialibrarypermissionresponse).\n */\nexport async function getMediaLibraryPermissionsAsync(\n  writeOnly: boolean = false\n): Promise<MediaLibraryPermissionResponse> {\n  return ExponentImagePicker.getMediaLibraryPermissionsAsync(writeOnly);\n}\n\n// @needsAudit\n/**\n * Asks the user to grant permissions for accessing camera. This does nothing on web because the\n * browser camera is not used.\n * @return A promise that fulfills with an object of type [CameraPermissionResponse](#camerarollpermissionresponse).\n */\nexport async function requestCameraPermissionsAsync(): Promise<CameraPermissionResponse> {\n  return ExponentImagePicker.requestCameraPermissionsAsync();\n}\n\n// @needsAudit\n/**\n * Asks the user to grant permissions for accessing user's photo. This method does nothing on web.\n * @param writeOnly Whether to request write or read and write permissions. Defaults to `false`\n * @return A promise that fulfills with an object of type [MediaLibraryPermissionResponse](#medialibrarypermissionresponse).\n */\nexport async function requestMediaLibraryPermissionsAsync(\n  writeOnly: boolean = false\n): Promise<MediaLibraryPermissionResponse> {\n  const imagePickerMethod = ExponentImagePicker.requestMediaLibraryPermissionsAsync;\n  return imagePickerMethod(writeOnly);\n}\n\n// @needsAudit\n/**\n * Check or request permissions to access the media library.\n * This uses both `requestMediaLibraryPermissionsAsync` and `getMediaLibraryPermissionsAsync` to interact with the permissions.\n *\n * @example\n * ```ts\n * const [status, requestPermission] = ImagePicker.useMediaLibraryPermissions();\n * ```\n */\nexport const useMediaLibraryPermissions = createPermissionHook<\n  MediaLibraryPermissionResponse,\n  { writeOnly?: boolean }\n>({\n  // TODO(cedric): permission requesters should have an options param or a different requester\n  getMethod: (options) => getMediaLibraryPermissionsAsync(options?.writeOnly),\n  requestMethod: (options) => requestMediaLibraryPermissionsAsync(options?.writeOnly),\n});\n\n// @needsAudit\n/**\n * Check or request permissions to access the camera.\n * This uses both `requestCameraPermissionsAsync` and `getCameraPermissionsAsync` to interact with the permissions.\n *\n * @example\n * ```ts\n * const [status, requestPermission] = ImagePicker.useCameraPermissions();\n * ```\n */\nexport const useCameraPermissions = createPermissionHook({\n  getMethod: getCameraPermissionsAsync,\n  requestMethod: requestCameraPermissionsAsync,\n});\n\n// @needsAudit\n/**\n * Android system sometimes kills the `MainActivity` after the `ImagePicker` finishes. When this\n * happens, we lost the data selected from the `ImagePicker`. However, you can retrieve the lost\n * data by calling `getPendingResultAsync`. You can test this functionality by turning on\n * `Don't keep activities` in the developer options.\n * @return\n * - **On Android:** a promise that resolves to an array of objects of exactly same type as in\n * `ImagePicker.launchImageLibraryAsync` or `ImagePicker.launchCameraAsync` if the `ImagePicker`\n * finished successfully. Otherwise, to the array of [`ImagePickerErrorResult`](#imagepickerimagepickererrorresult).\n * - **On other platforms:** an empty array.\n */\nexport async function getPendingResultAsync(): Promise<\n  (ImagePickerResult | ImagePickerErrorResult)[]\n> {\n  if (ExponentImagePicker.getPendingResultAsync) {\n    return ExponentImagePicker.getPendingResultAsync();\n  }\n  return [];\n}\n\n// @needsAudit\n/**\n * Display the system UI for taking a photo with the camera. Requires `Permissions.CAMERA`.\n * On Android and iOS 10 `Permissions.CAMERA_ROLL` is also required. On mobile web, this must be\n * called immediately in a user interaction like a button press, otherwise the browser will block\n * the request without a warning.\n * > **Note:** Make sure that you handle `MainActivity` destruction on **Android**. See [ImagePicker.getPendingResultAsync](#imagepickergetpendingresultasync).\n * > **Notes for Web:** The system UI can only be shown after user activation (e.g. a `Button` press).\n * Therefore, calling `launchCameraAsync` in `componentDidMount`, for example, will **not** work as\n * intended. The `cancelled` event will not be returned in the browser due to platform restrictions\n * and inconsistencies across browsers.\n * @param options An `ImagePickerOptions` object.\n * @return A promise that resolves to an object with `canceled` and `assets` fields.\n * When the user canceled the action the `assets` is always `null`, otherwise it's an array of\n * the selected media assets which have a form of [`ImagePickerAsset`](#imagepickerasset).\n */\nexport async function launchCameraAsync(\n  options: ImagePickerOptions = {}\n): Promise<ImagePickerResult> {\n  if (!ExponentImagePicker.launchCameraAsync) {\n    throw new UnavailabilityError('ImagePicker', 'launchCameraAsync');\n  }\n  const result = await ExponentImagePicker.launchCameraAsync(validateOptions(options));\n  return mergeDeprecatedResult(result);\n}\n\n// @needsAudit\n/**\n * Display the system UI for choosing an image or a video from the phone's library.\n * Requires `Permissions.MEDIA_LIBRARY` on iOS 10 only. On mobile web, this must be     called\n * immediately in a user interaction like a button press, otherwise the browser will block the\n * request without a warning.\n *\n * **Animated GIFs support:** On Android, if the selected image is an animated GIF, the result image will be an\n * animated GIF too if and only if `quality` is explicitly set to `1.0` and `allowsEditing` is set to `false`.\n * Otherwise compression and/or cropper will pick the first frame of the GIF and return it as the\n * result (on Android the result will be a PNG). On iOS, both quality and cropping are supported.\n *\n * > **Notes for Web:** The system UI can only be shown after user activation (e.g. a `Button` press).\n * Therefore, calling `launchImageLibraryAsync` in `componentDidMount`, for example, will **not**\n * work as intended. The `cancelled` event will not be returned in the browser due to platform\n * restrictions and inconsistencies across browsers.\n * @param options An object extended by [`ImagePickerOptions`](#imagepickeroptions).\n * @return A promise that resolves to an object with `canceled` and `assets` fields.\n * When the user canceled the action the `assets` is always `null`, otherwise it's an array of\n * the selected media assets which have a form of [`ImagePickerAsset`](#imagepickerasset).\n */\nexport async function launchImageLibraryAsync(\n  options?: ImagePickerOptions\n): Promise<ImagePickerResult> {\n  if (!ExponentImagePicker.launchImageLibraryAsync) {\n    throw new UnavailabilityError('ImagePicker', 'launchImageLibraryAsync');\n  }\n  if (options?.allowsEditing && options.allowsMultipleSelection) {\n    console.warn(\n      '[expo-image-picker] `allowsEditing` is not supported when `allowsMultipleSelection` is enabled and will be ignored.' +\n        \"Disable either 'allowsEditing' or 'allowsMultipleSelection' in 'launchImageLibraryAsync' \" +\n        'to fix this warning.'\n    );\n  }\n  const result = await ExponentImagePicker.launchImageLibraryAsync(options ?? {});\n  return mergeDeprecatedResult(result);\n}\n\nexport {\n  MediaTypeOptions,\n  ImagePickerOptions,\n  ImagePickerResult,\n  ImagePickerErrorResult,\n  ImagePickerAsset,\n  VideoExportPreset,\n  CameraPermissionResponse,\n  MediaLibraryPermissionResponse,\n  PermissionStatus,\n  PermissionExpiration,\n  PermissionHookOptions,\n  PermissionResponse,\n  ImageInfo, // deprecated\n  ImagePickerMultipleResult, // deprecated\n  ImagePickerCancelledResult, // deprecated\n  OpenFileBrowserOptions,\n  ExpandImagePickerResult, // deprecated\n  UIImagePickerControllerQualityType,\n  UIImagePickerPresentationStyle,\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}