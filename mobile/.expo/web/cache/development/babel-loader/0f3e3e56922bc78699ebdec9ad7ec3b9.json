{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _MediaTypeInput;\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { PermissionStatus, Platform } from 'expo-modules-core';\nimport { MediaTypeOptions } from \"./ImagePicker.types\";\nvar MediaTypeInput = (_MediaTypeInput = {}, _defineProperty(_MediaTypeInput, MediaTypeOptions.All, 'video/mp4,video/quicktime,video/x-m4v,video/*,image/*'), _defineProperty(_MediaTypeInput, MediaTypeOptions.Images, 'image/*'), _defineProperty(_MediaTypeInput, MediaTypeOptions.Videos, 'video/mp4,video/quicktime,video/x-m4v,video/*'), _MediaTypeInput);\nexport default {\n  get name() {\n    return 'ExponentImagePicker';\n  },\n  launchImageLibraryAsync: function () {\n    var _launchImageLibraryAsync = _asyncToGenerator(function* (_ref) {\n      var _ref$mediaTypes = _ref.mediaTypes,\n        mediaTypes = _ref$mediaTypes === void 0 ? MediaTypeOptions.Images : _ref$mediaTypes,\n        _ref$allowsMultipleSe = _ref.allowsMultipleSelection,\n        allowsMultipleSelection = _ref$allowsMultipleSe === void 0 ? false : _ref$allowsMultipleSe,\n        _ref$base = _ref.base64,\n        base64 = _ref$base === void 0 ? false : _ref$base;\n      if (!Platform.isDOMAvailable) {\n        return {\n          canceled: true,\n          assets: null\n        };\n      }\n      return yield openFileBrowserAsync({\n        mediaTypes: mediaTypes,\n        allowsMultipleSelection: allowsMultipleSelection,\n        base64: base64\n      });\n    });\n    function launchImageLibraryAsync(_x) {\n      return _launchImageLibraryAsync.apply(this, arguments);\n    }\n    return launchImageLibraryAsync;\n  }(),\n  launchCameraAsync: function () {\n    var _launchCameraAsync = _asyncToGenerator(function* (_ref2) {\n      var _ref2$mediaTypes = _ref2.mediaTypes,\n        mediaTypes = _ref2$mediaTypes === void 0 ? MediaTypeOptions.Images : _ref2$mediaTypes,\n        _ref2$allowsMultipleS = _ref2.allowsMultipleSelection,\n        allowsMultipleSelection = _ref2$allowsMultipleS === void 0 ? false : _ref2$allowsMultipleS,\n        _ref2$base = _ref2.base64,\n        base64 = _ref2$base === void 0 ? false : _ref2$base;\n      if (!Platform.isDOMAvailable) {\n        return {\n          canceled: true,\n          assets: null\n        };\n      }\n      return yield openFileBrowserAsync({\n        mediaTypes: mediaTypes,\n        allowsMultipleSelection: allowsMultipleSelection,\n        capture: true,\n        base64: base64\n      });\n    });\n    function launchCameraAsync(_x2) {\n      return _launchCameraAsync.apply(this, arguments);\n    }\n    return launchCameraAsync;\n  }(),\n  getCameraPermissionsAsync: function () {\n    var _getCameraPermissionsAsync = _asyncToGenerator(function* () {\n      return permissionGrantedResponse();\n    });\n    function getCameraPermissionsAsync() {\n      return _getCameraPermissionsAsync.apply(this, arguments);\n    }\n    return getCameraPermissionsAsync;\n  }(),\n  requestCameraPermissionsAsync: function () {\n    var _requestCameraPermissionsAsync = _asyncToGenerator(function* () {\n      return permissionGrantedResponse();\n    });\n    function requestCameraPermissionsAsync() {\n      return _requestCameraPermissionsAsync.apply(this, arguments);\n    }\n    return requestCameraPermissionsAsync;\n  }(),\n  getMediaLibraryPermissionsAsync: function () {\n    var _getMediaLibraryPermissionsAsync = _asyncToGenerator(function* (_writeOnly) {\n      return permissionGrantedResponse();\n    });\n    function getMediaLibraryPermissionsAsync(_x3) {\n      return _getMediaLibraryPermissionsAsync.apply(this, arguments);\n    }\n    return getMediaLibraryPermissionsAsync;\n  }(),\n  requestMediaLibraryPermissionsAsync: function () {\n    var _requestMediaLibraryPermissionsAsync = _asyncToGenerator(function* (_writeOnly) {\n      return permissionGrantedResponse();\n    });\n    function requestMediaLibraryPermissionsAsync(_x4) {\n      return _requestMediaLibraryPermissionsAsync.apply(this, arguments);\n    }\n    return requestMediaLibraryPermissionsAsync;\n  }()\n};\nfunction permissionGrantedResponse() {\n  return {\n    status: PermissionStatus.GRANTED,\n    expires: 'never',\n    granted: true,\n    canAskAgain: true\n  };\n}\nfunction openFileBrowserAsync(_ref3) {\n  var mediaTypes = _ref3.mediaTypes,\n    _ref3$capture = _ref3.capture,\n    capture = _ref3$capture === void 0 ? false : _ref3$capture,\n    _ref3$allowsMultipleS = _ref3.allowsMultipleSelection,\n    allowsMultipleSelection = _ref3$allowsMultipleS === void 0 ? false : _ref3$allowsMultipleS,\n    base64 = _ref3.base64;\n  var mediaTypeFormat = MediaTypeInput[mediaTypes];\n  var input = document.createElement('input');\n  input.style.display = 'none';\n  input.setAttribute('type', 'file');\n  input.setAttribute('accept', mediaTypeFormat);\n  input.setAttribute('id', String(Math.random()));\n  if (allowsMultipleSelection) {\n    input.setAttribute('multiple', 'multiple');\n  }\n  if (capture) {\n    input.setAttribute('capture', 'camera');\n  }\n  document.body.appendChild(input);\n  return new Promise(function (resolve) {\n    input.addEventListener('change', _asyncToGenerator(function* () {\n      if (input.files) {\n        var files = allowsMultipleSelection ? input.files : [input.files[0]];\n        var assets = yield Promise.all(Array.from(files).map(function (file) {\n          return readFile(file, {\n            base64: base64\n          });\n        }));\n        resolve({\n          canceled: false,\n          assets: assets\n        });\n      } else {\n        resolve({\n          canceled: true,\n          assets: null\n        });\n      }\n      document.body.removeChild(input);\n    }));\n    var event = new MouseEvent('click');\n    input.dispatchEvent(event);\n  });\n}\nfunction readFile(targetFile, options) {\n  return new Promise(function (resolve, reject) {\n    var reader = new FileReader();\n    reader.onerror = function () {\n      reject(new Error(\"Failed to read the selected media because the operation failed.\"));\n    };\n    reader.onload = function (_ref5) {\n      var target = _ref5.target;\n      var uri = target.result;\n      var returnRaw = function returnRaw() {\n        return resolve({\n          uri: uri,\n          width: 0,\n          height: 0\n        });\n      };\n      if (typeof uri === 'string') {\n        var image = new Image();\n        image.src = uri;\n        image.onload = function () {\n          var _image$naturalWidth, _image$naturalHeight;\n          resolve(_objectSpread({\n            uri: uri,\n            width: (_image$naturalWidth = image.naturalWidth) != null ? _image$naturalWidth : image.width,\n            height: (_image$naturalHeight = image.naturalHeight) != null ? _image$naturalHeight : image.height\n          }, options.base64 && {\n            base64: uri.substr(uri.indexOf(',') + 1)\n          }));\n        };\n        image.onerror = function () {\n          return returnRaw();\n        };\n      } else {\n        returnRaw();\n      }\n    };\n    reader.readAsDataURL(targetFile);\n  });\n}","map":{"version":3,"sources":["../src/ExponentImagePicker.web.ts"],"names":[],"mappings":"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","sourcesContent":["import { PermissionResponse, PermissionStatus, Platform } from 'expo-modules-core';\n\nimport {\n  ImagePickerAsset,\n  ImagePickerResult,\n  MediaTypeOptions,\n  OpenFileBrowserOptions,\n} from './ImagePicker.types';\n\nconst MediaTypeInput = {\n  [MediaTypeOptions.All]: 'video/mp4,video/quicktime,video/x-m4v,video/*,image/*',\n  [MediaTypeOptions.Images]: 'image/*',\n  [MediaTypeOptions.Videos]: 'video/mp4,video/quicktime,video/x-m4v,video/*',\n};\n\nexport default {\n  get name(): string {\n    return 'ExponentImagePicker';\n  },\n\n  async launchImageLibraryAsync({\n    mediaTypes = MediaTypeOptions.Images,\n    allowsMultipleSelection = false,\n    base64 = false,\n  }): Promise<ImagePickerResult> {\n    // SSR guard\n    if (!Platform.isDOMAvailable) {\n      return { canceled: true, assets: null };\n    }\n    return await openFileBrowserAsync({\n      mediaTypes,\n      allowsMultipleSelection,\n      base64,\n    });\n  },\n\n  async launchCameraAsync({\n    mediaTypes = MediaTypeOptions.Images,\n    allowsMultipleSelection = false,\n    base64 = false,\n  }): Promise<ImagePickerResult> {\n    // SSR guard\n    if (!Platform.isDOMAvailable) {\n      return { canceled: true, assets: null };\n    }\n    return await openFileBrowserAsync({\n      mediaTypes,\n      allowsMultipleSelection,\n      capture: true,\n      base64,\n    });\n  },\n\n  /*\n   * Delegate to expo-permissions to request camera permissions\n   */\n  async getCameraPermissionsAsync() {\n    return permissionGrantedResponse();\n  },\n  async requestCameraPermissionsAsync() {\n    return permissionGrantedResponse();\n  },\n\n  /*\n   * Camera roll permissions don't need to be requested on web, so we always\n   * respond with granted.\n   */\n  async getMediaLibraryPermissionsAsync(_writeOnly: boolean) {\n    return permissionGrantedResponse();\n  },\n  async requestMediaLibraryPermissionsAsync(_writeOnly: boolean): Promise<PermissionResponse> {\n    return permissionGrantedResponse();\n  },\n};\n\nfunction permissionGrantedResponse(): PermissionResponse {\n  return {\n    status: PermissionStatus.GRANTED,\n    expires: 'never',\n    granted: true,\n    canAskAgain: true,\n  };\n}\n\nfunction openFileBrowserAsync({\n  mediaTypes,\n  capture = false,\n  allowsMultipleSelection = false,\n  base64,\n}: OpenFileBrowserOptions): Promise<ImagePickerResult> {\n  const mediaTypeFormat = MediaTypeInput[mediaTypes];\n\n  const input = document.createElement('input');\n  input.style.display = 'none';\n  input.setAttribute('type', 'file');\n  input.setAttribute('accept', mediaTypeFormat);\n  input.setAttribute('id', String(Math.random()));\n  if (allowsMultipleSelection) {\n    input.setAttribute('multiple', 'multiple');\n  }\n  if (capture) {\n    input.setAttribute('capture', 'camera');\n  }\n  document.body.appendChild(input);\n\n  return new Promise((resolve) => {\n    input.addEventListener('change', async () => {\n      if (input.files) {\n        const files = allowsMultipleSelection ? input.files : [input.files[0]];\n        const assets: ImagePickerAsset[] = await Promise.all(\n          Array.from(files).map((file) => readFile(file, { base64 }))\n        );\n\n        resolve({ canceled: false, assets });\n      } else {\n        resolve({ canceled: true, assets: null });\n      }\n      document.body.removeChild(input);\n    });\n\n    const event = new MouseEvent('click');\n    input.dispatchEvent(event);\n  });\n}\n\nfunction readFile(targetFile: Blob, options: { base64: boolean }): Promise<ImagePickerAsset> {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onerror = () => {\n      reject(new Error(`Failed to read the selected media because the operation failed.`));\n    };\n    reader.onload = ({ target }) => {\n      const uri = (target as any).result;\n      const returnRaw = () => resolve({ uri, width: 0, height: 0 });\n\n      if (typeof uri === 'string') {\n        const image = new Image();\n        image.src = uri;\n        image.onload = () => {\n          resolve({\n            uri,\n            width: image.naturalWidth ?? image.width,\n            height: image.naturalHeight ?? image.height,\n            // The blob's result cannot be directly decoded as Base64 without\n            // first removing the Data-URL declaration preceding the\n            // Base64-encoded data. To retrieve only the Base64 encoded string,\n            // first remove data:*/*;base64, from the result.\n            // https://developer.mozilla.org/en-US/docs/Web/API/FileReader/readAsDataURL\n            ...(options.base64 && { base64: uri.substr(uri.indexOf(',') + 1) }),\n          });\n        };\n        image.onerror = () => returnRaw();\n      } else {\n        returnRaw();\n      }\n    };\n\n    reader.readAsDataURL(targetFile);\n  });\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}